# c++11多线程

详见https://www.apiref.com/cpp-zh/cpp/thread/thread.html
## 如何创建线程
```
#include<thread>
//线程类std::thread
//构造函数
thread() noexcept;
thread( thread&& other ) noexcept;//移动构造，移动后，原线程对象不再代表线程。
template< class Function, class... Args > explicit thread( Function&& f, Args&&... args );//函数/仿函数/lambda对象，前者的参数
thread(const thread&) = delete;//线程不允许拷贝，删除了拷贝构造

/*
第三个最常用，只有它构造新的 std::thread 对象并将它与执行线程关联。新的执行线程开始执行
*/
```
